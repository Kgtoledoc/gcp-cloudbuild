# Cloud Build configuration for CI/CD pipeline
# Escenario 3: GCP Technical Test

steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:latest',
      '.'
    ]
    id: 'build-image'

  # Step 2: Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'
    ]
    id: 'push-image'
    waitFor: ['build-image']

  # Step 3: Push latest tag
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:latest'
    ]
    id: 'push-latest'
    waitFor: ['build-image']

  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', '${_SERVICE_NAME}',
      '--image', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '1Gi',
      '--cpu', '1',
      '--min-instances', '0',
      '--max-instances', '10',
      '--concurrency', '100',
      '--timeout', '300',
      '--set-env-vars', 'ENVIRONMENT=production',
      '--set-env-vars', 'VERSION=${SHORT_SHA}',
      '--set-env-vars', 'BUILD_TIME=${BUILD_TIMESTAMP}',
      '--execution-environment', 'gen2',
      '--cpu-throttling',
      '--session-affinity'
    ]
    id: 'deploy-cloud-run'
    waitFor: ['push-image']

  # Step 5: Configure HTTPS-only traffic
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'services', 'update-traffic',
      '${_SERVICE_NAME}',
      '--to-latest',
      '--region', '${_REGION}'
    ]
    id: 'configure-https'
    waitFor: ['deploy-cloud-run']

  # Step 6: Apply Cloud Armor security policy
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'compute', 'security-policies', 'rules', 'update', '1000',
      '--security-policy', '${_SECURITY_POLICY_NAME}',
      '--action', 'deny-403',
      '--src-ip-ranges', '${_BLOCKED_IP}',
      '--description', 'Block specific IP address'
    ]
    id: 'apply-security-policy'
    waitFor: ['deploy-cloud-run']

# Substitution variables
substitutions:
  _REGION: 'us-central1'
  _REPO_NAME: 'gcp-technical-test'
  _SERVICE_NAME: 'web-app'
  _SECURITY_POLICY_NAME: 'web-app-security-policy'
  _BLOCKED_IP: '1.2.3.4'

# Options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  substitution_option: 'ALLOW_LOOSE'

# Timeout
timeout: '1200s'
